import matplotlib.pyplot as plt
import random

def plot_chr_len(SCRaMbLEd_events, chr_len, L_unique=[[]], LG50=[[]], num_essential= 0, simulations=1000, circular=False, probability=[0, 2, 2, 1], file_name="", SD_chr_len=[], SD_L_unique=[], SD_LG50=[]):
    if isinstance(chr_len[0], float):
        chr_len = [chr_len]
    if isinstance(L_unique[0], float):
        L_unique = [L_unique]
    if isinstance(LG50[0], float):
        LG50 = [LG50]
    # plot the results
    plt.figure(figsize=(18, 9))

    # Font size
    SMALL_SIZE = 16
    MEDIUM_SIZE = 20
    BIGGER_SIZE = 24
    plt.rc('font', size=SMALL_SIZE)  # controls default text sizes
    plt.rc('axes', titlesize=SMALL_SIZE)  # fontsize of the axes title
    plt.rc('axes', labelsize=MEDIUM_SIZE)  # fontsize of the x and y labels
    plt.rc('xtick', labelsize=SMALL_SIZE)  # fontsize of the tick labels
    plt.rc('ytick', labelsize=SMALL_SIZE)  # fontsize of the tick labels
    plt.rc('legend', fontsize=SMALL_SIZE)  # legend fontsize
    plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title

    # Find the longest chromosome
    # Put all the chromosome length in one list
    all_points = []
    for p in chr_len:
        all_points = all_points + p
    # Add the standard variation
    MAX_values = max(all_points) + max(SD_chr_len)

    plt.ylim([0, MAX_values + 5])
    plt.ylabel("Chr length mean over " + str(simulations) + " simulations")
    plt.xlabel("SCRaMbLEd events")
    plt.title("Chr length over SCRaMbLE events")

    plt.plot(0,0, label="Chr len", color="tab:blue")
    plt.plot(0,0, label="Len unique", color="tab:orange")
    plt.plot(0,0, label="LG50", color="tab:green")
    #plt.boxplot(chr_len)   # Use this to create boxplots. However, this needs all the data not just the mean
    for i in range(len(chr_len)):
        plt.plot(SCRaMbLEd_events, chr_len[i], color="tab:blue")
        if SD_chr_len != []:
            plt.errorbar(SCRaMbLEd_events, chr_len[i], yerr=SD_chr_len, elinewidth=0.1)
        if L_unique != [[]]:
            plt.plot(SCRaMbLEd_events, L_unique[i], color="tab:orange")
            if SD_L_unique != []:
                plt.errorbar(SCRaMbLEd_events, L_unique[i], yerr=SD_L_unique, elinewidth=0.1)
        if LG50 != [[]]:
            plt.plot(SCRaMbLEd_events, LG50[i], color="tab:green")
            if SD_LG50 != []:
                plt.errorbar(SCRaMbLEd_events, LG50[i], yerr=SD_LG50, elinewidth=0.1)

    plt.hlines(num_essential, 0, SCRaMbLEd_events[-1], colors="red", linestyle=":", label="Essential LU")
    # plt.text(SCRaMbLEd_events[-1] * -0.16, len(syn_chr) * -0.16, "Simulations = " + str(simulations) + "\n" + "Initial chr length = " + str(len(chr_len[0][0])) + "\n" + "Essential LU = " + str(num_essential))
    plt.legend()

    # These are some information to add to the saved files.
    # Create a random seed to save the image
    random_seed = str(random.random())[2:6]
    if circular:    # record if the chromosome is linear or circular
        lin_cir = "c"
    else:
        lin_cir = "l"
    probability_str = ""    # record the probabilities of each event
    for i in probability:
        probability_str = probability_str + str(i)

    plt.savefig("SCRaMbLE_chr_len/chr_length_" + lin_cir + "_events_" + str(SCRaMbLEd_events[-1]) + "_sim_" + str(simulations) + "_P" + probability_str + "_" + file_name + random_seed + ".png", dpi=200)
    plt.savefig("SCRaMbLE_chr_len/chr_length_" + lin_cir + "_events_" + str(SCRaMbLEd_events[-1]) + "_sim_" + str(simulations) + "_P" + probability_str + "_" + file_name + random_seed + ".svg", format="svg", dpi=200)
    plt.show()
    plt.close()
    return None


if __name__ == '__main__':
    essential = [2,7,9,10,12,20]
    L_event = 7     # length of SCRaMbLE events

    Chr_len0 = 45
    max_SCRaMbLEd_events = 1001
    SCRaMbLEd_events_range = 10
    num_essential = 10

    syn_chr = list(range(1, Chr_len0, 1))
    SCRaMbLEd_events = list(range(0, max_SCRaMbLEd_events, SCRaMbLEd_events_range))

    ################################

    # Normal P(DEL)/P(DUP) = 2
    simulations = 1000

    chr_len_100 = [100.0, 105.775, 107.979, 109.778, 110.28, 112.58, 111.003, 111.983, 109.025, 111.835, 112.181, 108.464, 109.785, 106.974, 107.69, 104.887, 104.868, 103.858, 99.767, 100.475, 101.391, 98.957, 96.818, 96.024, 96.086, 93.929, 94.127, 93.335, 91.072, 90.673, 89.724, 89.476, 88.689, 86.053, 85.411, 85.395, 84.578, 82.336, 83.01, 83.807, 81.194, 81.229, 79.965, 81.086, 79.698, 78.986, 78.379, 77.022, 78.709, 76.129, 78.377, 75.454, 74.611, 74.069, 74.443, 72.791, 74.738, 72.595, 73.762, 71.364, 70.984, 70.932, 70.749, 71.908, 69.596, 71.198, 69.467, 70.354, 68.768, 70.266, 69.473, 68.569, 68.75, 66.701, 65.545, 66.021, 67.132, 66.418, 66.964, 67.123, 65.411, 66.101, 65.496, 62.924, 64.764, 64.129, 64.895, 62.96, 63.32, 63.403, 63.674, 63.598, 62.938, 62.493, 63.008, 63.157, 63.093, 62.094, 62.239, 62.898, 63.04]
    L_unique_100 = [100.0, 90.096, 82.236, 76.8, 71.025, 67.152, 63.068, 59.727, 56.724, 54.044, 51.992, 49.405, 47.412, 44.93, 43.54, 41.845, 41.041, 38.924, 36.741, 36.294, 35.138, 33.453, 32.425, 31.653, 30.997, 29.71, 29.101, 28.682, 27.371, 26.799, 26.171, 25.362, 24.883, 23.987, 23.49, 22.958, 22.816, 21.964, 21.719, 21.431, 20.937, 20.488, 20.148, 20.142, 19.408, 19.395, 18.778, 18.41, 18.385, 17.885, 17.633, 17.606, 17.148, 16.966, 16.86, 16.455, 16.304, 15.941, 16.112, 15.752, 15.352, 15.454, 15.278, 15.17, 14.841, 14.536, 14.608, 14.63, 14.323, 14.235, 14.121, 13.855, 13.915, 13.748, 13.543, 13.453, 13.437, 13.351, 13.23, 13.083, 12.914, 12.992, 12.817, 12.752, 12.745, 12.666, 12.597, 12.499, 12.49, 12.389, 12.349, 12.278, 12.172, 12.15, 12.067, 12.027, 11.983, 11.977, 11.89, 11.907, 11.869]
    LG50_100 = [49.0, 36.677, 29.131, 25.111, 21.656, 19.408, 17.759, 16.047, 15.163, 13.841, 13.154, 12.333, 11.471, 10.688, 10.21, 9.761, 9.476, 8.864, 8.325, 8.036, 7.75, 7.253, 6.947, 6.76, 6.65, 6.261, 6.073, 5.959, 5.626, 5.465, 5.335, 5.059, 4.977, 4.74, 4.606, 4.421, 4.43, 4.177, 4.181, 4.065, 4.037, 3.859, 3.789, 3.75, 3.557, 3.584, 3.479, 3.306, 3.328, 3.238, 3.183, 3.191, 3.038, 3.035, 2.942, 2.875, 2.828, 2.756, 2.771, 2.653, 2.594, 2.641, 2.562, 2.564, 2.49, 2.386, 2.382, 2.414, 2.324, 2.352, 2.333, 2.226, 2.279, 2.251, 2.22, 2.143, 2.146, 2.138, 2.085, 2.058, 2.099, 2.083, 2.009, 2.05, 2.0, 1.992, 1.961, 1.965, 1.912, 1.917, 1.926, 1.919, 1.885, 1.82, 1.818, 1.853, 1.845, 1.82, 1.802, 1.809, 1.776]

    chr_len_50 = [50.0, 60.677, 67.548, 71.942, 74.396, 75.664, 78.597, 80.25, 80.127, 80.735, 80.81, 80.946, 80.739, 81.702, 79.558, 80.152, 78.795, 81.583, 81.196, 79.532, 78.739, 77.642, 78.431, 78.38, 77.742, 78.354, 75.278, 77.579, 75.347, 76.432, 73.62, 73.651, 75.166, 74.533, 72.831, 72.268, 72.905, 72.297, 73.966, 71.532, 72.352, 71.192, 71.256, 70.675, 70.533, 68.726, 69.48, 70.087, 69.314, 70.254, 66.076, 67.753, 66.434, 67.55, 68.227, 66.502, 67.561, 65.564, 65.732, 65.635, 66.405, 65.007, 65.927, 63.642, 65.161, 65.386, 66.393, 63.636, 62.921, 63.256, 63.048, 65.047, 63.738, 61.73, 62.961, 64.789, 63.152, 62.178, 61.366, 62.439, 61.324, 61.757, 62.866, 62.413, 60.146, 60.286, 59.668, 60.893, 59.617, 60.948, 60.101, 60.89, 59.807, 59.942, 60.897, 61.105, 59.049, 60.581, 59.358, 59.012, 59.263]
    L_unique_50 = [50.0, 45.586, 42.968, 40.611, 38.254, 36.557, 34.955, 33.868, 32.152, 31.166, 29.685, 28.76, 27.951, 27.195, 26.128, 25.431, 24.744, 24.307, 23.339, 23.098, 22.402, 21.662, 21.438, 21.018, 20.486, 20.208, 19.515, 19.44, 18.856, 18.676, 18.303, 17.997, 17.949, 17.554, 17.079, 17.009, 16.829, 16.587, 16.224, 16.058, 15.987, 15.679, 15.74, 15.274, 15.143, 15.037, 14.903, 14.689, 14.508, 14.665, 14.152, 14.095, 13.776, 13.884, 13.893, 13.595, 13.652, 13.467, 13.26, 13.16, 13.203, 13.154, 12.964, 12.851, 12.821, 12.671, 12.713, 12.604, 12.446, 12.417, 12.377, 12.381, 12.27, 12.259, 12.17, 12.107, 12.062, 12.012, 11.82, 11.827, 11.879, 11.834, 11.724, 11.652, 11.652, 11.588, 11.566, 11.563, 11.534, 11.402, 11.378, 11.32, 11.383, 11.278, 11.216, 11.259, 11.192, 11.198, 11.094, 11.159, 11.12]
    LG50_50 = [24.0, 16.347, 13.316, 11.744, 10.496, 9.676, 8.837, 8.361, 7.698, 7.419, 6.91, 6.591, 6.246, 5.982, 5.684, 5.335, 5.248, 5.108, 4.804, 4.729, 4.6, 4.403, 4.262, 4.132, 4.037, 3.92, 3.772, 3.698, 3.556, 3.514, 3.449, 3.347, 3.295, 3.222, 3.107, 3.102, 3.002, 2.927, 2.827, 2.819, 2.827, 2.681, 2.778, 2.651, 2.603, 2.564, 2.515, 2.473, 2.433, 2.446, 2.362, 2.363, 2.313, 2.276, 2.278, 2.26, 2.253, 2.191, 2.115, 2.13, 2.127, 2.137, 2.059, 2.055, 2.026, 1.966, 1.998, 1.972, 1.986, 1.921, 1.899, 1.892, 1.881, 1.915, 1.852, 1.89, 1.829, 1.839, 1.864, 1.852, 1.839, 1.81, 1.756, 1.767, 1.76, 1.762, 1.773, 1.729, 1.736, 1.718, 1.685, 1.717, 1.705, 1.675, 1.648, 1.642, 1.642, 1.686, 1.644, 1.621, 1.668]

    chr_len_20 = [20.0, 30.9, 38.912, 43.093, 46.068, 51.085, 52.967, 53.689, 55.752, 56.554, 57.975, 57.248, 57.861, 59.143, 60.843, 59.993, 59.698, 58.856, 60.398, 60.889, 60.696, 60.308, 61.769, 61.262, 60.378, 62.263, 59.551, 59.761, 61.308, 63.033, 59.7, 60.503, 61.361, 61.28, 61.568, 60.96, 60.147, 61.51, 60.817, 60.329, 59.497, 60.618, 62.011, 60.816, 59.81, 59.855, 58.685, 60.074, 61.009, 58.981, 60.041, 60.819, 59.263, 58.389, 60.105, 58.357, 59.68, 60.149, 57.797, 58.714, 58.154, 58.465, 58.679, 58.648, 57.857, 58.547, 59.24, 59.812, 58.468, 59.369, 58.903, 58.646, 57.491, 57.048, 58.32, 59.119, 57.065, 56.961, 56.787, 56.658, 58.537, 57.289, 57.799, 56.409, 56.947, 58.115, 58.221, 57.284, 56.424, 57.579, 56.862, 58.731, 56.918, 57.777, 55.197, 56.911, 55.92, 57.629, 57.861, 56.824, 55.384]
    L_unique_20 = [20.0, 19.052, 18.392, 17.715, 17.204, 16.86, 16.487, 16.133, 15.749, 15.581, 15.25, 14.945, 14.785, 14.571, 14.382, 14.198, 13.853, 13.809, 13.642, 13.556, 13.452, 13.282, 13.204, 13.071, 12.969, 12.9, 12.782, 12.682, 12.55, 12.494, 12.373, 12.364, 12.342, 12.295, 12.154, 12.118, 11.917, 11.995, 11.892, 11.861, 11.731, 11.684, 11.619, 11.649, 11.546, 11.501, 11.439, 11.469, 11.474, 11.326, 11.326, 11.359, 11.27, 11.276, 11.135, 11.182, 11.177, 11.182, 11.064, 11.089, 11.0, 11.001, 10.977, 10.978, 10.915, 10.929, 10.878, 10.93, 10.865, 10.882, 10.799, 10.747, 10.774, 10.778, 10.721, 10.692, 10.682, 10.646, 10.622, 10.733, 10.666, 10.589, 10.63, 10.622, 10.627, 10.581, 10.548, 10.557, 10.502, 10.508, 10.487, 10.501, 10.496, 10.473, 10.414, 10.445, 10.415, 10.439, 10.447, 10.436, 10.382]
    LG50_20 = [9.0, 5.959, 5.024, 4.521, 4.125, 3.861, 3.665, 3.527, 3.293, 3.172, 3.135, 2.981, 2.871, 2.826, 2.727, 2.671, 2.575, 2.515, 2.447, 2.434, 2.368, 2.342, 2.3, 2.283, 2.218, 2.187, 2.166, 2.135, 2.121, 2.071, 2.012, 2.038, 1.975, 1.97, 1.938, 1.948, 1.913, 1.918, 1.866, 1.877, 1.841, 1.805, 1.794, 1.794, 1.822, 1.782, 1.756, 1.722, 1.769, 1.719, 1.734, 1.758, 1.687, 1.738, 1.694, 1.691, 1.666, 1.644, 1.707, 1.656, 1.626, 1.635, 1.598, 1.639, 1.597, 1.628, 1.586, 1.597, 1.576, 1.631, 1.567, 1.592, 1.591, 1.578, 1.538, 1.535, 1.555, 1.519, 1.498, 1.598, 1.517, 1.572, 1.536, 1.557, 1.558, 1.542, 1.51, 1.511, 1.532, 1.519, 1.484, 1.516, 1.506, 1.487, 1.496, 1.473, 1.531, 1.5, 1.496, 1.488, 1.516]

    chr_len_50_cir = [50.0, 62.68, 66.57, 71.09333333333333, 76.23333333333333, 75.76333333333334, 78.76333333333334, 80.62333333333333, 82.08333333333333, 85.14666666666666, 85.35666666666667, 82.28666666666666, 80.10666666666667, 82.10333333333334, 79.46666666666667, 81.48333333333333, 80.70333333333333, 80.55, 80.97, 77.6, 80.73666666666666, 77.38333333333334, 78.88666666666667, 76.81333333333333, 79.26, 76.87333333333333, 79.24333333333334, 78.72666666666667, 76.01, 78.07333333333334, 73.30666666666667, 75.08, 71.40333333333334, 71.79, 72.09, 74.43, 70.97, 72.26666666666667, 71.02666666666667, 75.38333333333334, 72.4, 72.55, 69.92333333333333, 69.63, 69.11666666666666, 71.05333333333333, 69.43, 71.53, 68.75666666666666, 69.16333333333333, 65.04333333333334, 68.55333333333333, 68.93333333333334, 65.75, 70.55333333333333, 69.12, 65.01666666666667, 64.34666666666666, 68.00333333333333, 66.31333333333333, 67.74333333333334, 65.80666666666667, 63.64333333333333, 65.58666666666667, 66.67333333333333, 61.95666666666666, 61.906666666666666, 64.61333333333333, 60.666666666666664, 61.85, 62.55, 62.903333333333336, 63.46333333333333, 64.78666666666666, 63.763333333333335, 62.513333333333335, 60.17666666666667, 61.88333333333333, 59.553333333333335, 61.81333333333333, 62.08, 61.35, 59.86, 59.903333333333336, 59.373333333333335, 60.92, 56.25666666666667, 62.43, 60.61666666666667, 59.233333333333334, 64.45333333333333, 61.08, 60.72, 63.13, 59.086666666666666, 59.17666666666667, 57.766666666666666, 59.31333333333333, 62.00666666666667, 58.693333333333335, 59.45333333333333]
    L_unique_50_cir = [50.0, 46.61333333333334, 42.95, 40.61, 38.803333333333335, 36.12, 35.33, 34.04333333333334, 32.516666666666666, 31.536666666666665, 30.966666666666665, 29.173333333333332, 27.963333333333335, 26.85333333333333, 25.913333333333334, 25.60333333333333, 25.15, 24.336666666666666, 23.616666666666667, 22.673333333333332, 22.68, 21.813333333333333, 21.723333333333333, 20.863333333333333, 21.073333333333334, 20.10333333333333, 20.18, 19.623333333333335, 19.17, 18.863333333333333, 18.25, 18.02, 17.513333333333332, 17.243333333333332, 17.2, 17.28, 16.64, 16.8, 16.333333333333332, 16.196666666666665, 15.873333333333333, 15.466666666666667, 14.953333333333333, 15.09, 15.526666666666667, 15.176666666666666, 14.843333333333334, 14.663333333333334, 14.716666666666667, 14.403333333333334, 14.393333333333333, 14.26, 14.06, 13.993333333333334, 13.916666666666666, 13.59, 13.436666666666667, 13.54, 13.483333333333333, 13.273333333333333, 13.22, 13.103333333333333, 13.023333333333333, 13.03, 12.803333333333333, 12.7, 12.573333333333334, 12.513333333333334, 12.586666666666666, 12.393333333333333, 12.306666666666667, 12.256666666666666, 12.35, 12.27, 12.19, 11.923333333333334, 12.07, 11.99, 11.886666666666667, 11.94, 12.0, 11.753333333333334, 11.75, 11.486666666666666, 11.64, 11.553333333333333, 11.45, 11.49, 11.533333333333333, 11.446666666666667, 11.543333333333333, 11.33, 11.316666666666666, 11.403333333333334, 11.323333333333334, 11.186666666666667, 11.286666666666667, 11.16, 11.3, 11.233333333333333, 11.133333333333333]
    LG50_50_cir = [24.0, 16.54, 13.506666666666666, 11.856666666666667, 10.666666666666666, 9.516666666666667, 9.003333333333334, 8.433333333333334, 7.693333333333333, 7.3966666666666665, 7.096666666666667, 6.536666666666667, 6.373333333333333, 5.87, 5.636666666666667, 5.473333333333334, 5.273333333333333, 5.096666666666667, 4.863333333333333, 4.68, 4.55, 4.336666666666667, 4.383333333333334, 4.133333333333334, 4.193333333333333, 3.8866666666666667, 3.8233333333333333, 3.8266666666666667, 3.6366666666666667, 3.49, 3.4966666666666666, 3.3733333333333335, 3.256666666666667, 3.2, 3.1166666666666667, 3.1333333333333333, 3.05, 2.9566666666666666, 2.8766666666666665, 2.776666666666667, 2.85, 2.66, 2.56, 2.6333333333333333, 2.683333333333333, 2.6466666666666665, 2.46, 2.4133333333333336, 2.533333333333333, 2.41, 2.4266666666666667, 2.37, 2.276666666666667, 2.2666666666666666, 2.31, 2.2733333333333334, 2.2133333333333334, 2.24, 2.21, 2.0, 2.1466666666666665, 2.0766666666666667, 2.04, 2.13, 2.0166666666666666, 1.9933333333333334, 2.026666666666667, 1.98, 2.0, 1.96, 1.9933333333333334, 1.87, 1.9066666666666667, 1.7833333333333334, 1.8733333333333333, 1.8033333333333332, 1.84, 1.84, 1.83, 1.8266666666666667, 1.8066666666666666, 1.7866666666666666, 1.84, 1.7166666666666666, 1.7966666666666666, 1.7033333333333334, 1.8, 1.68, 1.7933333333333332, 1.7633333333333334, 1.68, 1.6633333333333333, 1.6833333333333333, 1.72, 1.6966666666666668, 1.66, 1.6833333333333333, 1.6233333333333333, 1.6766666666666667, 1.6866666666666668, 1.62]

    chr_len = [chr_len_100, chr_len_50, chr_len_20]
    L_unique = [L_unique_100, L_unique_50, L_unique_20]

    # Test plot_chr_len
    #plot_chr_len([0, 1], chr_len=[40.0, 43.0], L_unique=[20.0, 22.0], num_essential=4, simulations=10, SD_chr_len=[2,1])
    plot_chr_len(SCRaMbLEd_events, chr_len, L_unique=L_unique, num_essential=num_essential, simulations=simulations)
    #plot_chr_len(SCRaMbLEd_events, chr_len_20, L_unique_20, num_essential, simulations)
    # P(DEL)/P(DUP) = 1

    # P(DEL)/P(DUP) = 1/2


    # Many lines


    # One line with standard deviation


    # Circular?